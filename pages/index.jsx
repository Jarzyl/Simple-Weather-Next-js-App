import Head from "next/head";
import axios from "axios";
import React, { useState, useRef } from "react";
import { BsSearch } from "react-icons/bs";
import Weather from "../components/Weather";

export default function Home() {
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState({});
  const [error, setError] = useState("");
  const [showMessage, setShowMessage] = useState(true);
  const inputRef = useRef(null);

  const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!city) {
      setError("Please enter a city name.");
      return;
    }
    // check for other invalid characters or data here
    // if everything is valid, fetch weather data
    fetchWeather();
    setError(""); // clear error message
    setShowMessage(false); // hide welcome message
  };

  const fetchWeather = () => {
    axios
      .get(API_URL)
      .then((response) => {
        setWeather(response.data);
      })
      .catch((error) => {
        setError("City not found. Please enter a valid city name.");
      });
    setCity("");
    inputRef.current.value = ""; // clear input field
  };

  return (
    <div>
      <Head>
        <title>Simple Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/jpg" href="logo.png" />
      </Head>

      {/* Overlay */}

      <div className="absolute top-0 left-0 right-0 bottom-0 bg-black/10 z-[1]" />

      {/* Search */}

      <div className="relative flex justify-between items-center max-w-[500px] w-full m-auto pt-8 px-10 text-white z-10">
        <form
          onSubmit={handleSubmit}
          className="flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl"
        >
          <div>
            <input
              onChange={(e) => setCity(e.target.value)}
              ref={inputRef} // add a ref to the input field
              className="bg-transparent border-none text-white focus:outline-none text-2xl "
              type="text"
              placeholder="Search city"
            />
            {error && <p className="text-red-500">{error}</p>}
          </div>
          <button onClick={handleSubmit} type="search" role="button">
            <BsSearch size={20} className="search-icon"  />
          </button>
        </form>
      </div>

      {showMessage && (
        <p className="bg-black/40 m-6 relative p-1 pb-4 rounded-lg text-2xl text-center text-emerald-300 px-5 z-10 md:text-5xl">
          Welcome in my weather app! <br /> Enter a city to check the weather!
        </p>
      )}

      {/* Weather data display */}

      {weather.main && <Weather data={weather} />}
    </div>
  );
}
